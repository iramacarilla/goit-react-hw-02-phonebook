{"version":3,"sources":["components/contactEditorElement/ContactEditorElement.module.css","components/filter/Filter.module.css","components/contactList/ContactList.js","components/filter/Filter.js","components/contactEditorElement/ContactEditorElement.js","components/contactEditor/ContactEditor.js","components/App.js","index.js","components/contactList/ContactList.module.css"],"names":["module","exports","ContactList","contacts","onDelete","className","styles","contactList","contactData","map","idx","id","name","number","type","onClick","data-id","Filter","value","onChange","search","placeholder","ContactEditorElement","onHandelChange","contact","form","onSubmit","initialState","ContactEditor","onAddForm","useState","state","setState","e","preventDefault","target","App","setContacts","filter","setFilter","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","item","includes","alert","uuidv4","length","toLowerCase","dataset","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c9bc7199.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactEditorElement_contact__3PWq6\",\"form\":\"ContactEditorElement_form__nkBvH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Filter_search__39RyG\"};","import React from 'react'\r\nimport styles from './ContactList.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({contacts, onDelete}) => {\r\n  return (\r\n<div className={styles.contactList}>\r\n <h2>Contacts</h2>\r\n <ul className= {styles.contactData}>\r\n   {contacts.map(({id, name, number}, idx) => (\r\n    <li key={id}>\r\n   <p> {idx+1}. Name: {name}</p>\r\n   <p> Number: {number}</p>\r\n   <button type='button' onClick={onDelete} data-id={id}>Delete</button>\r\n   </li>\r\n   ))\r\n   }\r\n \r\n </ul>\r\n\r\n</div>\r\n)\r\n}\r\n \r\nContactList.propTypes = {\r\n\tcontacts: PropTypes.array.isRequired,\r\n\tonDelete: PropTypes.func.isRequired\r\n};\r\nexport default ContactList;","import React from 'react'\r\nimport styles from './Filter.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Filter({value, onChange}) {\r\n    return (\r\n        <div>\r\n            <input className ={styles.search} type='text' value={value} placeholder=\"Search by name\" onChange={onChange}/>\r\n        </div>\r\n    )\r\n}\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n};\r\n\r\n\r\n","import React from 'react'\r\nimport styles from './ContactEditorElement.module.css'\r\n\r\nconst ContactEditorElement = ({name, number, onChange, onHandelChange}) => {\r\n    return (\r\n        <div className={styles.contact}>\r\n              <h2>Phonebook</h2>\r\n      <form className={styles.form} onSubmit={onChange}>\r\n        <label> Name\r\n        <input type='text' name='name' value={name }\r\n        onChange={onHandelChange}/> \r\n          </label>\r\n          <label> Number\r\n         <input type='tel' name='number' value={number }\r\n        onChange={onHandelChange}/> \r\n        </label>\r\n        <button type=\"submit\">Add contact </button>\r\n      </form>   \r\n            </div>\r\n    )\r\n}\r\nexport default  ContactEditorElement","import React, { useState } from 'react'\r\nimport ContactEditorElement from '../contactEditorElement/ContactEditorElement'\r\n\r\nconst initialState = {\r\n  name: '',\r\n  number: '',\r\n}\r\n\r\nconst ContactEditor = ({onAddForm}) => {\r\n\r\nconst[state, setState] = useState({...initialState})  \r\n\r\n    const onHandelChange = (e) => {\r\n        const {name} = e.target\r\n        setState({...state, [name]: e.target.value})\r\n      }\r\n      \r\n  const  handelSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n   onAddForm({name: state.name, number: state.number})\r\n    setState({...initialState})\r\n    }\r\n    \r\n  \r\n        return (\r\n          <ContactEditorElement name={state.name} number={state.number} \r\n          onChange={handelSubmit} onHandelChange={onHandelChange}/>\r\n           \r\n        )\r\n    \r\n}\r\n\r\nexport default ContactEditor\r\n\r\n\r\n/*import React, { Component } from 'react'\r\nimport ContactEditorElement from '../contactEditorElement/ContactEditorElement'\r\n\r\nexport default class ContactEditor extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n      }\r\n      onHandelChange = (e) => {\r\n        const {name, value} = e.target\r\n        this.setState({[name]: value})\r\n      }\r\n      \r\n    handelSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    this.props.onAddForm(this.state.name, this.state.number)\r\n    this.setState({name: '', number:''})\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n          <ContactEditorElement name={this.state.name} number={this.state.number} \r\n          onChange={this.handelSubmit} onHandelChange={this.onHandelChange}/>\r\n           \r\n        )\r\n    }\r\n}*/","\nimport React, { useState, useEffect  } from 'react'\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactList from './contactList/ContactList'\nimport Filter from './filter/Filter'\nimport ContactEditor from './contactEditor/ContactEditor'\n\n\n \n  const App = () => {\n\n  const [contacts, setContacts] = useState([])\n  const [filter, setFilter] = useState('')\n\n  useEffect (() => {\n   localStorage.getItem('contacts') && setContacts(JSON.parse(localStorage.getItem('contacts')))\n  }, []);\n  \n\n useEffect (() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts))\n    }, [contacts])\n    \n\n  const getFilter = (e) => {\n    setFilter(e.target.value)\n  }\n  const filterContacts =() => {\n    return [...contacts.filter(item => \n      item.name.toLowerCase().includes(filter.toLowerCase()))]\n    }\n  \n \n  const addContact = item => {\n    const searchName = contacts.map(contact => contact.name).includes(item.name)\n    if(searchName) {alert(`${item.name} is already in contacts`)} \n    else {\n    setContacts([...contacts, {id: uuidv4(), ...item}])\n    }\n  }\n\n  const deleteContact = (e) => {\n    const id = e.target.dataset.id;\n    setContacts(\n      [...contacts.filter(contact=> contact.id !== id) \n    ])\n  }\n  \n    return (\n      <>\n      <ContactEditor onAddForm={addContact}/>\n      {contacts.length && <Filter value={filter} onChange={getFilter}/>}\n     {contacts.length && <ContactList contacts= {filterContacts()} onDelete={deleteContact}/> }\n      \n      </>\n    )\n\n}\n\nexport default App\n\n\n/*import React, { Component } from 'react'\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactList from './contactList/ContactList'\nimport Filter from './filter/Filter'\nimport ContactEditor from './contactEditor/ContactEditor'\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter:'', \n  }\n  \n  componentDidMount() {\n    if (localStorage.getItem('contacts')) \n    {this.setState({contacts: JSON.parse(localStorage.getItem('contacts'))})}\n  }\n  \n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n    localStorage.setItem('contacts', JSON.stringify(this.state.contacts))}\n    }\n    \n\n  setFilter = (e) => {\n    this.setState({filter: e.target.value})\n  }\n  filterContact =() => {\n    const {contacts, filter} = this.state\n    return contacts.filter(contact => \n      contact.name.toLowerCase().includes(filter.toLowerCase()))\n    }\n  \n \n  addContact = (name, number) => {\n    const searchName = this.state.contacts.map((contact) => contact.name).includes(name)\n    if(searchName) {alert(`${name} is already in contacts`)} \n    else {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number\n    }\n    this.setState(prevState => {\n      return{ contacts: [...prevState.contacts, contact]}})\n    }\n  }\n\n  deleteContact = (id) => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(contact=> contact.id !== id) \n      }})\n  }\n  render() {\n    const filtredContact = this.filterContact();\n    return (\n      <>\n      <ContactEditor onAddForm={this.addContact}/>\n      {this.state.contacts.length && <Filter value={this.state.filter} onChange={this.setFilter}/>}\n     {this.state.contacts.length && <ContactList contacts= {filtredContact} onDelete={this.deleteContact}/> }\n      \n      </>\n    )\n}\n}\n*/","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App'\n\n\nReactDOM.render(\n\n    <App />,\n  \n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2jI8q\",\"contactData\":\"ContactList_contactData__2Gm-_\"};"],"sourceRoot":""}